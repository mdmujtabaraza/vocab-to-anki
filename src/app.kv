#:import choice random.choice

#:import Clipboard kivy.core.clipboard.Clipboard
#:import Window kivy.core.window.Window

#:import get_text src.lib.strings.get_text
#:import select_global_var_value src.db.select_global_var_value

<Check@MDCheckbox>:
    group: 'accents'
    size_hint: None, None
    size: dp(48), dp(48)

ScreenManager:
    id: screen_manager
    HomeScreen:
        id: home_screen
    SettingsScreen:
        id: settings_screen
    MeaningsScreen:
        id: meanings_screen

# MDLabel:
#     id: url_label
#     text: get_text("app_title")
#     halign: 'center'
#     theme_text_color: 'Primary'
#     font_style: 'H6'
#     pos_hint: {'center_x': 0.5, 'center_y': 0.92}

<HomeScreen>:
    name: "home_screen"
    MDBoxLayout:
        orientation: "vertical"
        size: root.width, root.height
        MDToolbar:
            id: toolbar
            title: get_text("app_title")
            anchor_title: 'center'
            left_action_items: [[get_text("settings_icon"), lambda x: app.get_running_app().change_screen("settings_screen")]]
            right_action_items: [[get_text("github_icon"), lambda x: app.get_running_app().restart()]]
            elevation: 10
        FloatLayout:
            # MDFlatButton:
            #     text: "Meanings"
            #     pos_hint: {'center_x': .8, 'center_y': .9}
            #     on_release: root.open_apkg()
            #     # on_press: root.manager.current = 'meanings_screen'
            MDRaisedButton:
                id: dict_dropdown
                text: get_text("browse_button")
                font_style: 'Button'
                pos_hint: {"center_x": 0.5, 'center_y': 0.89}
                on_release: root.open_dictionary_dropdown()
            MDTextField:
                id: word_input
                text: get_text("sample_url")
                padding: "10dp"
                multiline: False
                hint_text: get_text("paste_here")
                helper_text: f"ex: {get_text('sample_url')}"
                helper_text_mode: "on_focus"
                size_hint: (.75, .1)
                pos_hint: {'center_x': 0.45, 'center_y': 0.72}
            MDIconButton:
                icon: get_text('paste_icon')
                pos_hint: {"center_x": .9, "center_y": .72}
                on_release: word_input.text = Clipboard.paste()
            # MDLabel:
            #     text: get_text("chose_accent")
            #     theme_text_color: 'Primary'
            #     font_style: 'Body1'
            #     halign: 'center'
            #     pos_hint: {'center_x': 0.5, 'center_y': 0.58}
            # GridLayout:
            #     cols: 2
            #     row_force_default: True
            #     row_default_height: 40
            #     col_force_default: True
            #     col_default_width: 180
            #     pos_hint: {'center_x': 0.39, 'center_y': 0.5}
            #     size_hint: (None, .1)
            MDTextField:
                id: tags_input
                padding: "10dp"
                multiline: False
                hint_text: get_text("tag_info")
                helper_text: f"ex: {get_text('sample_tags')}"
                helper_text_mode: "on_focus"
                icon_left: get_text('tag_icon')
                # icon_left_color: 'red'
                size_hint: (.75, .1)
                pos_hint: {'center_x': 0.45, 'center_y': 0.58}
                on_focus: root.tags_input_focus_mode(self.focus)
            MDRectangleFlatButton:
                text: get_text("generate_flashcards")
                font_style: 'Button'
                pos_hint: {'center_x': 0.5, 'center_y': 0.2}
                on_press: root.dialog_popup(get_text("finding_meanings"), choice(get_text("funny_loading_messages")))
                on_release: root.show_meanings()

<SettingsScreen>:
    name: "settings_screen"
    MDBoxLayout:
        id: settings_layout
        orientation: "vertical"
        size: root.width, root.height
        MDToolbar:
            id: toolbar
            title: get_text("app_title")
            anchor_title: 'center'
            left_action_items: [[get_text("update_icon"), lambda x: app.get_running_app().change_screen("home_screen")]]
            right_action_items: [[get_text("home_icon"), lambda x: root.save_settings()]]
            elevation: 10
        MDFloatLayout:
            MDLabel:
                text: "Pronunciation Language"
                font_style: "Body1"
                pos_hint: {'center_x': .53, 'center_y': .94}
            MDIconButton:
                icon: get_text('volume_icon')
                pos_hint: {"center_x": .25, "center_y": .86}
            MDDropDownItem:
                id: lang_dropdown
                pos_hint: {'center_x': .5, 'center_y': .86}
                text: get_text('en_us')
                on_release: root.open_lang_dropdown()
            MDLabel:
                text: "A.I. Voice (IBM Watson TTS Engine)"
                font_style: "Body1"
                pos_hint: {'center_x': .53, 'center_y': .72}
            MDIconButton:
                icon: get_text('account_icon')
                pos_hint: {"center_x": .25, "center_y": .64}
            MDDropDownItem:
                id: gender_dropdown
                pos_hint: {'center_x': .5, 'center_y': .64}
                text: get_text('female')
                on_release: root.open_gender_dropdown()
            MDTextField:
                id: ibm_api_id_input
                padding: "10dp"
                multiline: False
                hint_text: get_text("paste_api_id_here")
                size_hint: (.75, .1)
                pos_hint: {'center_x': 0.45, 'center_y': 0.54}
            MDIconButton:
                icon: get_text('paste_icon')
                pos_hint: {"center_x": .9, "center_y": .54}
                on_release: ibm_api_id_input.text = Clipboard.paste()
            MDTextField:
                id: ibm_endpoint_url_input
                padding: "10dp"
                multiline: False
                hint_text: get_text("paste_endpoint_url_here")
                size_hint: (.75, .1)
                pos_hint: {'center_x': 0.45, 'center_y': 0.42}
            MDIconButton:
                icon: get_text('paste_icon')
                pos_hint: {"center_x": .9, "center_y": .42}
                on_release: ibm_endpoint_url_input.text = Clipboard.paste()

<MeaningsScreen>:
    name: "meanings_screen"
    MDBoxLayout:
        spacing: "10dp"
        pos_hint: {"top": 1}
        adaptive_height: True
        orientation: "vertical"
        size: root.width, root.height

        MDToolbar:
            id: toolbar
            title: get_text("app_title")
            anchor_title: 'center'
            left_action_items: [[get_text('back_icon'), lambda x: app.get_running_app().soft_restart()]]
            right_action_items: [[get_text('select_all_icon'), lambda x: root.select_all()]]
            elevation: 10

        ScrollView:
            size: self.size
            MDList:
                MDGridLayout:
                    size_hint_y: None
                    height: self.minimum_height
                    width: self.minimum_width
                    cols: 2
                    # row_force_default: True
                    # row_default_height: 40
                    id: meanings_selection_list
                # spacing: '20dp'
                # padding: '25dp'
                # overlay_color: app.theme_cls.primary_dark[:-1] + [.2]
                # icon_bg_color: app.theme_cls.primary_dark
                # icon_pos: [Window.size[0] - 65, 10]
                # on_selected: app.on_selected(*args)
                # on_unselected: app.on_unselected(*args)
                # on_selected_mode: app.set_selection_mode(*args)


<MeaningsPanelContent>
    cols: 2
    # size_hint_y: None
    # height: self.minimum_height
    # orientation: "vertical"
    padding: dp(10)
    spacing: dp(10)
    adaptive_height: True

<MeaningMDCheckbox>
    size_hint: (.12, 1)
    # size: (48, 74)
    # width: 74
    pos_hint: {'center_x': .5, 'center_y': .5}
    on_active: root.on_checkbox_active(*args)

<IconListItem>

    IconLeftWidget:
        icon: root.icon


# BoxLayout:
#     orientation: 'horizontal'
#     size_hint: (.88, .3)
#     pos_hint: {"center_x": .5, "center_y": .42}
#     Check:
#         id: check_uk
#         width: 48
#         pos_hint: {"center_x": .12, "center_y": .4}
#         on_active: root.checkbox_click(self, self.active, "uk")
#     MDLabel:
#         width: 152
#         pos_hint: {"center_x": .12, "center_y": .4}
#         text: f'[ref=uk]{get_text("en_uk")}[/ref]'
#         markup: True
#         on_ref_press: root.check_it_down(*args)
#     Check:
#         id: check_us
#         width: 48
#         pos_hint: {"center_x": .25, "center_y": .4}
#         active: True
#         on_active: root.checkbox_click(self, self.active, "us")
#     MDLabel:
#         width: 152
#         pos_hint: {"center_x": .25, "center_y": .4}
#         text: f'[ref=us]{get_text("en_us")}[/ref]'
#         markup: True
#         on_ref_press: root.check_it_down(*args)